# Generated by Django 5.2.4 on 2025-09-03 17:48

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Election',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('current_phase', models.CharField(choices=[('registration', 'Registration Phase'), ('delegate_voting', 'Delegate Voting Phase'), ('main_voting', 'Main Voting Phase (Delegates vote for positions)'), ('results', 'Results Phase'), ('closed', 'Election Closed')], default='registration', max_length=20)),
                ('delegate_voting_start', models.DateTimeField()),
                ('delegate_voting_end', models.DateTimeField()),
                ('main_voting_start', models.DateTimeField()),
                ('main_voting_end', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Faculties',
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('acronym', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='party_logos/')),
                ('color_code', models.CharField(default='#000000', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Parties',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('president', 'President'), ('vice_president', 'Vice President'), ('secretary_general', 'Secretary General'), ('treasurer', 'Treasurer'), ('sports_minister', 'Sports Minister'), ('entertainment_minister', 'Entertainment Minister'), ('education_minister', 'Education Minister'), ('accommodation_minister', 'Accommodation Minister')], max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('registration_number', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Registration number must be in format: SC211/0530/2022', regex='^[A-Z]{2}\\d{3}/\\d{4}/\\d{4}$')])),
                ('birth_certificate_number', models.CharField(max_length=20)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('year_of_study', models.IntegerField(choices=[(1, '1st Year'), (2, '2nd Year'), (3, '3rd Year'), (4, '4th Year'), (5, '5th Year')])),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'voting_student',
            },
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manifesto', models.TextField(blank=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='candidate_photos/')),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidacies', to=settings.AUTH_USER_MODEL)),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='voting.party')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidates', to='voting.position')),
            ],
            options={
                'unique_together': {('party', 'position')},
            },
        ),
        migrations.CreateModel(
            name='Delegate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='delegate_profile', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delegates', to='voting.department')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delegates', to='voting.party')),
            ],
            options={
                'unique_together': {('student', 'department')},
            },
        ),
        migrations.AddField(
            model_name='department',
            name='faculty',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='voting.faculty'),
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programmes', to='voting.department')),
            ],
            options={
                'unique_together': {('name', 'department')},
            },
        ),
        migrations.AddField(
            model_name='student',
            name='programme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='voting.programme'),
        ),
        migrations.CreateModel(
            name='VoteAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('delegate_vote', 'Delegate Vote Cast'), ('main_vote', 'Main Vote Cast'), ('login_attempt', 'Login Attempt'), ('vote_attempt', 'Vote Attempt')], max_length=20)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('success', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DelegateVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_time', models.DateTimeField(auto_now_add=True)),
                ('voter_ip', models.GenericIPAddressField()),
                ('delegate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes_received', to='voting.delegate')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delegate_votes_cast', to=settings.AUTH_USER_MODEL)),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delegate_votes', to='voting.election')),
            ],
            options={
                'unique_together': {('election', 'voter')},
            },
        ),
        migrations.CreateModel(
            name='ElectionResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_count', models.IntegerField(default=0)),
                ('percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('is_winner', models.BooleanField(default=False)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='election_results', to='voting.candidate')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cached_results', to='voting.election')),
            ],
            options={
                'ordering': ['-vote_count'],
                'unique_together': {('election', 'candidate')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='department',
            unique_together={('name', 'faculty')},
        ),
        migrations.CreateModel(
            name='MainVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_time', models.DateTimeField(auto_now_add=True)),
                ('voter_ip', models.GenericIPAddressField()),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes_received', to='voting.candidate')),
                ('delegate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_votes_cast', to='voting.delegate')),
                ('election', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='main_votes', to='voting.election')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('election', 'delegate', 'candidate'), name='unique_vote_per_candidate'), models.UniqueConstraint(fields=('election', 'delegate', 'candidate'), name='unique_vote_per_position')],
            },
        ),
    ]
